package com.dxjr.portal.borrow.mapper;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.dxjr.common.page.Page;
import com.dxjr.portal.borrow.entity.TenderRecord;
import com.dxjr.portal.borrow.entity.TenderRecordExample;
import com.dxjr.portal.borrow.vo.TenderRecordCnd;
import com.dxjr.portal.borrow.vo.TenderRecordVo;
import com.dxjr.portal.tender.vo.BTenderRecordCnd;
import com.dxjr.portal.tender.vo.BTenderRecordVo;

public interface TenderRecordMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int countByExample(TenderRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int deleteByExample(TenderRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int insert(TenderRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int insertSelective(TenderRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	List<TenderRecord> selectByExample(TenderRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	TenderRecord selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int updateByExampleSelective(@Param("record") TenderRecord record, @Param("example") TenderRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int updateByExample(@Param("record") TenderRecord record, @Param("example") TenderRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int updateByPrimaryKeySelective(TenderRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table rocky_b_tenderrecord
	 * 
	 * @mbggenerated Mon May 19 14:13:32 CST 2014
	 */
	int updateByPrimaryKey(TenderRecord record);

	List<TenderRecord> selectByUserIdAndBorrowId(@Param("userId") Integer userId, @Param("borrowId") Integer borrowId);

	/**
	 * 
	 * <p>
	 * Description:根据标ID、用户ID、自动投标排名查询自动投标记录<br />
	 * </p>
	 * 
	 * @author yangshijin
	 * @version 0.1 2014年5月27日
	 * @param borrowId
	 *            标ID
	 * @param userId
	 *            用户ID
	 * @param autotenderOrder
	 *            自动投标排名
	 * @return TenderRecord
	 */
	public TenderRecord queryTenderRecordForAutoTender(@Param("userId") Integer userId, @Param("borrowId") Integer borrowId,
			@Param("autotenderOrder") Integer autotenderOrder);

	/**
	 * 
	 * <p>
	 * Description:根据borrowId查询投标记录<br />
	 * </p>
	 * 
	 * @author yangshijin
	 * @version 0.1 2014年7月12日
	 * @param borrowId
	 * @return
	 * @throws Exception
	 *             List<TenderRecordVo>
	 */
	public List<TenderRecordVo> queryTenderRecordPage(Integer borrowId, Page p) throws Exception;

	/**
	 * 
	 * <p>
	 * Description:根据borrowId查询投标记录<br />
	 * </p>
	 * 
	 * @author yangshijin
	 * @version 0.1 2014年8月26日
	 * @param borrowId
	 * @return
	 * @throws Exception
	 *             List<TenderRecordVo>
	 */
	public List<TenderRecordVo> queryTenderRecordByBorrowId(@Param("borrowId") Integer borrowId) throws Exception;

	/**
	 * 
	 * <p>
	 * Description:根据borrowId查询投标记录数<br />
	 * </p>
	 * 
	 * @author chenlu
	 * @version 0.1 2014年8月24日
	 * @param borrowId
	 * @return
	 * @throws Exception
	 *             int
	 */
	public int queryTenderRecordCountByBorrowId(int borrowId) throws Exception;

	/**
	 * 
	 * <p>
	 * Description:获取某个标最后一笔投标记录<br />
	 * </p>
	 * 
	 * @author yangshijin
	 * @version 0.1 2014年7月24日
	 * @param borrowId
	 * @return
	 * @throws Exception
	 *             TenderRecordVo
	 */
	public TenderRecordVo queryTenderRecordLastByBorrowId(int borrowId) throws Exception;

	/**
	 * <p>
	 * Description:获取用户的投标有效金额<br />
	 * </p>
	 * 
	 * @author justin.xu
	 * @version 0.1 2014年9月3日
	 * @param borrowId
	 * @param userId
	 * @param money
	 * @return
	 * @throws Exception
	 *             BigDecimal
	 */
	public BigDecimal getEffectMoney(@Param("borrowId") Integer borrowId, @Param("userId") Integer userId, @Param("money") BigDecimal money)
			throws Exception;

	/**
	 * 
	 * <p>
	 * Description:根据borrowId查询投标记录已投总金额<br />
	 * </p>
	 * 
	 * @author yangshijin
	 * @version 0.1 2014年12月19日
	 * @param borrowId
	 * @return
	 * @throws Exception
	 *             BigDecimal
	 */
	public BigDecimal getTenderAccountYesByBorrowId(Integer borrowId) throws Exception;

	/**
	 * <p>
	 * Description:根据条件查询投标记录集合<br />
	 * </p>
	 * 
	 * @author justin.xu
	 * @version 0.1 2014年12月23日
	 * @param bTenderRecordCnd
	 * @return
	 * @throws Exception
	 *             List<BTenderRecordVo>
	 */
	public List<BTenderRecordVo> queryTenderListByCnd(BTenderRecordCnd bTenderRecordCnd) throws Exception;

	/**
	 * 
	 * <p>
	 * Description:根据userId查询投官方标的投标记录数量<br />
	 * </p>
	 * 
	 * @author yangshijin
	 * @version 0.1 2015年1月4日
	 * @param userId
	 * @return
	 * @throws Exception
	 *             Integer
	 */
	public Integer getTenderRecordCountByUserId(Integer userId) throws Exception;

	/**
	 * 
	 * <p>
	 * Description:根据userId查询投标成功的数量<br />
	 * </p>
	 * 
	 * @author yangshijin
	 * @version 0.1 2015年1月23日
	 * @param userId
	 * @return
	 * @throws Exception
	 *             Integer
	 */
	public Integer getTenderSuccessCountByUserId(Integer userId) throws Exception;

	/**
	 * <p>
	 * Description:根据条件查询投标记录<br />
	 * </p>
	 * 
	 * @author justin.xu
	 * @version 0.1 2015年2月5日
	 * @param borrowId
	 * @return
	 * @throws Exception
	 *             List<TenderRecordVo>
	 */
	public List<TenderRecordVo> queryListByTenderRecordCnd(TenderRecordCnd tenderRecordCnd) throws Exception;

	/**
	 * 
	 * <p>
	 * Description:根据userId查询投过散标的数量（即仅手动投标和自动投标）<br />
	 * </p>
	 * 
	 * @author yangshijin
	 * @version 0.1 2015年3月25日
	 * @param userId
	 * @return
	 * @throws Exception
	 *             Integer
	 */
	public Integer getTenderPowderCountByUserId(Integer userId) throws Exception;

	/**
	 * 
	 * <p>
	 * Description:查询userId和account查询该用户所投最后一笔投标记录<br />
	 * </p>
	 * 
	 * @author YangShiJin
	 * @version 0.1 2015年5月7日
	 * @param borrowId
	 * @param userId
	 * @param account
	 * @return
	 * @throws Exception
	 *             TenderRecordVo
	 */
	public TenderRecordVo queryTenderRecordLastByUserIdAndAccount(@Param("borrowId") Integer borrowId, @Param("userId") Integer userId,
			@Param("account") BigDecimal account) throws Exception;
	
	/**
	 * 根据定期宝ID查询投标记录表信息
	 * @author WangQianJin
	 * @title @param fixBorrowId
	 * @title @return
	 * @date 2015年9月15日
	 */
	public List<TenderRecordVo> queryFixTenderRecordList(Integer fixBorrowId);
	
	
	/**
	 * 
	 * <p>
	 * Description:添加投标记录<br />
	 * </p>
	 * @author tanghaitao
	 * @version 0.1 2016年5月24日
	 * @param tenderRecord
	 * @return
	 * int
	 */
	int insertTenderrecord(TenderRecord tenderRecord);
	
	
	/**
	 * 
	 * <p>
	 * Description:等额本息待收总利息<br />
	 * </p>
	 * @author tanghaitao
	 * @version 0.1 2016年5月24日
	 * @param map
	 * @return
	 * BigDecimal
	 */
	BigDecimal getFqInsTotal(Map<String, Object> map);
	
	/**
	 * 
	 * <p>
	 * Description:获取用户等级<br />
	 * </p>
	 * @author tanghaitao
	 * @version 0.1 2016年5月24日
	 * @param map
	 * @return
	 * Map<String,Object>
	 */
	Map<String, Object> getUserLevelRatio(Map<String, Object> map);
	
	
	/**
	 * 
	 * <p>
	 * Description:根据标ID查询投标总金额及记录数<br />
	 * </p>
	 * @author tanghaitao
	 * @version 0.1 2016年5月25日
	 * @param borrowId
	 * @return
	 * TenderRecordVo
	 */
	TenderRecordVo findTenderrecordAccount(Integer borrowId);
	
	/**
	 * 
	 * <p>
	 * Description:根据标ID查询投标记录并锁定<br />
	 * </p>
	 * @author tanghaitao
	 * @version 0.1 2016年5月25日
	 * @param borrowId
	 * @return
	 * TenderRecordVo
	 */
	List<TenderRecord> findTenderrecordForUpdate(Integer borrowId);
	
	/**
	 * 
	 * <p>
	 * Description:根据银行响应结果更新投标记录<br />
	 * </p>
	 * @author tanghaitao
	 * @version 0.1 2016年5月25日
	 * @param tenderRecord
	 * @return
	 * int
	 */
	int updateTenderrecordZS(TenderRecord tenderRecord);
	
	/**
	 * 根据投标计划最终认购ID查询投标信息
	 * <p>
	 * Description:根据投标计划最终认购ID查询投标信息<br />
	 * </p>
	 * @author wushaoling
	 * @version 0.1 2016年5月30日
	 * @param realId
	 * @return
	 * List<TenderRecord>
	 */
	List<TenderRecord> queryTenderBorrow(Integer realId);
	
	Integer findCheckBorrow(Integer userId);
}